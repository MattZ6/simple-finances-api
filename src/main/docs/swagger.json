{
  "openapi": "3.0.0",
  "info": {
    "version": "v0.0.0",
    "title": "Simple finances API",
    "description": "API docs for simple finances application.",
    "license": {
      "name": "MIT",
      "url": "https://github.com/MattZ6/simple-finances-api/blob/main/LICENSE.md"
    },
    "contact": {
      "name": "Matheus",
      "email": "matt_z6@hotmail.com",
      "url": "https://github.com/MattZ6"
    }
  },
  "externalDocs": {
    "url": "https://github.com/MattZ6/simple-finances-api",
    "description": "More info"
  },
  "tags": [
    {
      "name": "User",
      "description": "Endpoints related to the Users's scope"
    },
    {
      "name": "Category",
      "description": "Endpoints related to the Transaction Categories scope"
    }
  ],
  "paths": {
    "/v1/auth/google": {
      "post": {
        "tags": ["User"],
        "summary": "Performs user authentication with Google.",
        "description": "Performs user authentication with Google.",
        "requestBody": {
          "required": true,
          "description": "Google authorization code",
          "content": {
            "application/json": {
              "example": {
                "code": "..."
              },
              "schema": {
                "$ref": "#/components/schemas/GoogleAuthorizationCode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "...",
                  "refresh_token": "..."
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "Code required": {
                    "value": {
                      "code": "validation",
                      "message": "Validation error",
                      "validation": {
                        "field": "email",
                        "type": "required",
                        "value": null,
                        "message": "The code field is required."
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": "internal",
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "tags": ["User"],
        "summary": "Refreshes user authentication.",
        "description": "Refreshes user authentication.",
        "requestBody": {
          "required": true,
          "description": "Refresh token data.",
          "content": {
            "application/json": {
              "example": {
                "refresh_token": "..."
              },
              "schema": {
                "$ref": "#/components/schemas/RefreshToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "example": {
                  "access_token": "...",
                  "refresh_token": "..."
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "Refresh token required": {
                    "value": {
                      "code": "validation",
                      "message": "Validation error",
                      "validation": {
                        "field": "refresh_token",
                        "type": "required",
                        "value": null,
                        "message": "The refresh_token field is required."
                      }
                    }
                  },
                  "Refresh token invalid": {
                    "value": {
                      "code": "validation",
                      "message": "Validation error",
                      "validation": {
                        "field": "refresh_token",
                        "type": "invalid",
                        "value": null,
                        "message": "The refresh_token is not a valid UUID."
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "example": {
                  "code": "user_token.not.exists",
                  "message": "Token not found"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity",
            "content": {
              "application/json": {
                "example": {
                  "code": "user_token.expired",
                  "message": "Token has expired"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": "internal",
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/transactions/categories": {
      "get": {
        "tags": ["Category"],
        "summary": "List all transaction categories.",
        "description": "List all transaction categories.",
        "security": [{ "userAuth": [] }],
        "parameters": [
          {
            "name": "type",
            "description": "The type of category",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["INCOME", "OUTCOME"],
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "example": [
                  {
                    "id": "de0fdf1f-27b8-4660-ace8-00aa6573776f",
                    "title": "Alimentação",
                    "description": "Contas relacionadas à alimentação",
                    "type": "OUTCOME",
                    "slug": "feed"
                  },
                  {
                    "id": "b4c93af8-4b41-4f4b-9cd5-d97a59128cb2",
                    "title": "Transporte",
                    "description": "Contas relacionadas à transporte e locomoção",
                    "type": "OUTCOME",
                    "slug": "transportation"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "examples": {
                  "Required type": {
                    "value": {
                      "code": "validation",
                      "message": "Validation error",
                      "validation": {
                        "field": "type",
                        "type": "required",
                        "value": null,
                        "message": "The type field is required"
                      }
                    }
                  },
                  "Invalid type": {
                    "value": {
                      "code": "validation",
                      "message": "Validation error",
                      "validation": {
                        "field": "type",
                        "type": "invalid",
                        "value": null,
                        "message": "The value of the type field is not one of INCOME, OUTCOME values"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "examples": {
                  "Access token missing": {
                    "value": {
                      "code": "token.not.provided",
                      "message": "Missing access token"
                    }
                  },
                  "Access token invalid": {
                    "value": {
                      "code": "token.invalid",
                      "message": "Invalid access token"
                    }
                  },
                  "Access token expired": {
                    "value": {
                      "code": "token.expired",
                      "message": "The access token is expired"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "example": {
                  "code": "internal",
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GoogleAuthorizationCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          }
        }
      },
      "RefreshToken": {
        "type": "object",
        "properties": {
          "refresh_token": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "userAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Access-Token",
        "description": "The user's access token"
      }
    }
  }
}
